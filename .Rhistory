library(tidyverse)
tmp = as_tibble(mtcars)
tmp
class(tmp)
?class
tmp$x = tibble(y = 1:3)
tmp$x = replicate(32, tibble(y = 1:3))
tmp
class(tmp)
class(tmp$mpg)
class(tmp$x)
tmp$x[[1]]
tmp$x = replicate(32, tibble(y = 1:3, z = letters[1:3]))
tmp$x = replicate(32, list(tibble(y = 1:3, z = letters[1:3])))
tmp$x[[1]]
class(tmp$x)
class(tmp$x[[1]])
tmp
x %>%
map_chr(function(.x) paste(class(.x), sep = ';'))
x = tmp
x %>%
map_chr(function(.x) paste(class(.x), sep = ';'))
x %>%
map_chr(function(.x) paste(class(.x), sep = ';')) %>%
as_tibble
x %>%
map_dfr(function(.x) paste(class(.x), sep = ';')) %>%
as_tibble
x %>%
map_dfc(function(.x) paste(class(.x), sep = ';')) %>%
as_tibble
x %>%
map_df(function(.x) paste(class(.x[[1]]), sep = ';'))
x[[1]]
x[[1]][[1]]
x[[1]][[1]] %>% class
x %>%
map_df(function(.x) paste(class(.x[[1]]), collapse = ';'))
usethis::use_namespace('tidyr')
usethis::use_package('tidyr')
usethis::use_namespace('tidyr')
?pivot_longer
x %>%
map_df(function(.x) paste(class(.x[[1]]), collapse = ';')) %>%
tidyr::pivot_longer(cols = dplyr::everything(),
names_to = 'column',
values_to = 'class')
x %>%
map_df(function(.x) paste(class(.x[[1]]), collapse = ',')) %>%
tidyr::pivot_longer(cols = dplyr::everything(),
names_to = 'column',
values_to = 'class')
x %>%
map_df(function(.x) paste(class(.x[[1]]), collapse = ', ')) %>%
tidyr::pivot_longer(cols = dplyr::everything(),
names_to = 'column',
values_to = 'class')
x %>%
map_df(function(.x) paste(class(.x[[1]]), collapse = ', ')) %>%
tidyr::pivot_longer(cols = dplyr::everything(),
names_to = 'column',
values_to = 'class')
x %>%
map_dfr(function(.x) paste(class(.x[[1]]), collapse = ', ')) %>%
tidyr::pivot_longer(cols = dplyr::everything(),
names_to = 'column',
values_to = 'class')
devtools::document()
install.packages('ks')
?col
?grepl
#' Filter to rows matching a pattern
#'
fpat = function(x, pattern, col_name) {
x %>%
dplyr::filter(grepl(pattern, x = !!col_name))
}
tmp
rm(x)
#' Filter to rows matching a pattern
#'
fpat = function(x, pattern, col_name) {
x %>%
dplyr::filter(grepl(pattern, x = !!col_name))
}
tmp$y = replicate(32, paste0(sample(letters, 3), collapse = ''))
tmp
fpat
tmp %>% fpat('pli', y)
x %>%
dplyr::filter(grepl(pattern, x = {{ col_name }}))
#' Filter to rows matching a pattern
#'
fpat = function(x, pattern, col_name) {
x %>%
dplyr::filter(grepl(pattern, x = {{ col_name }}))
}
tmp %>% fpat('pli', y)
usethis::use_package('rlang')
devtools::document()
?fpat
devtools::document()
warnings()
rlang::`{{`
devtools::document()
warnings()
devtools::document()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
devtools::install()
library(geryon)
file.exists("~/.ssh/id_rsa.pub")
file.exists("~/.ssh/id_rsa.pub")
80 / 208
(80 / 208) * 114
850 - ((80 / 208) * 114)
(128  / 208) * 114
paste0( 850 - ((80 / 208) * 114), " more grams flour")
770 /850
850 * .88
paste0( round(748 - (128  / 208) * 114), "more grams water")
paste0( round(748 - (128  / 208) * 114), " more grams water")
paste0( round(850 - ((80 / 208) * 114)), " more grams flour")
850 * .85
paste0( round(722 - (128  / 208) * 114), " more grams water")
678 - 652
1975*2
1975*5
1975*5 + (29.73 + 2.40*3)
(29.73 + 2.40*3)
(29.73 + 2.40*3) + 1975 * 5 + 100 + 500
(29.73 + 2.40*3) + 1975 * 5 + 200 + 1000
(29.73 + 2.40*3) + 1975 * 5 + 100 + 500 - 3950
(29.73 + 2.40*3) + 1975 * 5 + 200 + 1000 - 3950
